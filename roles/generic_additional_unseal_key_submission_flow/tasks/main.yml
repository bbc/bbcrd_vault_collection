---

- name: "Fetch unseal key submission state {{ purpose }}"
  run_once: "{{ submit_once }}"
  uri:
    url: "{{ status_api_url }}"
    ca_path: "{{ ansible_vault_ca_path | default(omit) }}"
    # NB: 400 returned by verify endpoint when no verification is in progress.
    # NB: 503 returned if vault is sealed
    status_code: "{{ status_status_code }}"
  register: status

- name: "Determine if an unseal key submission is taking place"
  set_fact:
    submission_in_progress: >-
      {{
        (status.json.nonce | default("")) != ""
        or (status.json.sealed | default(False))
      }}
    required: >-
      {{
        (
          status.json.t | default(status.json.required)
            - status.json.progress
        ) if status.status == 200 else none
      }}

- name: Provide unseal key
  when: |-
    (
      groups[ansible_vault_cluster_ansible_group_name]
        | map("extract", hostvars)
        | map(attribute="submission_in_progress")
    ) is any
  block:
    - name: "Confirm unseal key submission {{ purpose }}"
      run_once: true
      when: not ansible_vault_skip_additional_unseal_confirmation
      pause:
        prompt: >-
          Supply unseal keys {{ purpose }}
          {% if (status.json.nonce | default("")) != "" -%}
          with nonce {{ status.json.nonce }}
          {% endif -%}
          ? (y/N)
      register: confirmation
    
    - name: Obtain and submit unseal keys
      when: >-
        (
          (confirmation.user_input.strip().lower() in ["y", "yes"])
          if not ansible_vault_skip_additional_unseal_confirmation else
          True
        )
      block:
        - name: Obtain unseal keys
          import_role:
            name: bbcrd.ansible_vault.decrypt_unseal_keys
        
        - name: "Submit unseal key {{ purpose }}"
          no_log: "{{ ansible_vault_no_log_sensitive }}"
          run_once: "{{ submit_once }}"
          uri:
            url: "{{ submit_api_url }}"
            method: POST
            body_format: json
            body:
              key: "{{ item }}"
              nonce: "{{ status.json.nonce if ('nonce' in status.json) != '' else omit }}"
            ca_path: "{{ ansible_vault_ca_path | default(omit) }}"
          # Never submit the last unseal key (we leave this to the person
          # running the main playbook so any outputs at that point don't need
          # forwarding on via a side-channel).
          loop: "{{ (ansible_vault_unseal_keys or [])[:(required | int) - 1] }}"
          loop_control:
            index_var: idx
            label: "{{ idx }}"
