################################################################################
# Root tokens
################################################################################

# Override: The vault root token to use. If not provided, one will be created
# using unseal keys (and automatically revoked).
ansible_vault_root_token: null

# The lifetime to assign to root tokens generated by ths role. The use of
# limited-lifetime root tokens is a safety feature. If the role crashes or is
# interrupted, this ensures that a generated root token will eventually expire
# anyway.
#
# Use the format described at
# https://developer.hashicorp.com/vault/docs/concepts/duration-format.
#
# The default of 8 hours is chosen to match a worst-case of one working day.
# The hypothetical scenario is that one person starts a playbook and spends
# most of the day waiting for a colleague to submit extra unseal keys for some
# other step.
ansible_vault_root_token_ttl: 8h


################################################################################
# Forced action overrides
################################################################################

# Override: Set to a list of servers to be restarted (and unsealed again)
# one-by-one, in the order specified during the execution of the role.
#
# If null, only servers running an out-of-date vault binary will be restarted.
#
# If an empty list, no servers will be restarted, even if some are running an
# out-of-date version.
#
# If a list, exactly the listed set of servers will be restarted, regardless of
# what Vault versions are in use.
ansible_vault_restart_servers: null

# Override: If set to True, rekey the unseal keys even if the set of managers
# has not changed.
ansible_vault_force_rekey: false


################################################################################
# Safety overrides
################################################################################

# Don't log results of sensitive actions
ansible_vault_no_log_sensitive: true

# If set to False, this role will refuse to remove or restart cluster nodes
# when it would cause the cluster to fall out of quorum.
#
# Only set to True with caution. If nodes are removed (rather than just
# restarted) recovering the cluster requires adding new nodes until quorum can
# be achieved again. Alternatively, it involves performing a manual
# 'peers.json' recovery
# (https://developer.hashicorp.com/vault/docs/concepts/integrated-storage#manual-recovery-using-peers-json)
ansible_vault_allow_loss_of_quorum: false

# If set to True, skips the sanity check during new cluster initialisation that
# the playbook is running against all cluster nodes.
ansible_vault_skip_cluster_init_sanity_check: false

# When set, do not interactively prompt for confirmation before rekeying when
# the set of keys to be used has changed.
ansible_vault_skip_confirm_rekey_changes: false

# When set to True, verify that a new set of unseal keys is decryptable/usable
# by requiring them to be used for verification before committing to the unseal
# key change. This check reduces the chances of becoming locked out of Vault
# due to a misconfiguration.
ansible_vault_verify_rekey: true

# If set to True, skips the sanity check during cluster rekeying that the
# playbook is running against all cluster nodes.
#
# If you choose to set this option, you are responsible for manually
# propagating the new encrypted unseal key bundle to all hosts in the cluster.
# Take extreme care to copy the right files to the right hosts!
ansible_vault_skip_rekey_sanity_check: false

# If true, skip interactive confirmation (and verification of the nonce, if
# applicable) before supplying additional unseal keys.
ansible_vault_skip_additional_unseal_confirmation: false
