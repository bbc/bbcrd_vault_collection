---
# Pick an arbitrary host with an unsealed Vault server running on it to use to
# drive the API. Sets 'unsealed_host' to the name of the chosen host.

- name: Get vault server status
  uri:
    # vault operator status
    url: "{{ ansible_vault_public_url }}/v1/sys/seal-status"
    ca_path: "{{ ansible_vault_ca_path | default(omit) }}"
  register: vault_state

- name: Check if unsealed
  set_fact:
    vault_sealed: "{{ vault_state.json.sealed }}"
    
    # We'll also store a resolved copy of the ansible_vault_public_url and
    # ansible_vault_ca_path variables for all hosts which we will pick one of
    # later on to set for all hosts.
    #
    # This could be a separate step but Ansible output is already noisy enough
    # as it is
    unsealed_host_public_url: "{{ ansible_vault_public_url }}"
    unsealed_host_ca_path: "{{ ansible_vault_ca_path | default(omit) }}"

- name: Pick an arbitrary unsealed host
  run_once: true
  set_fact:
    unsealed_host: |-
      {{
        (
          groups[ansible_vault_cluster_ansible_group_name]
            | intersect(ansible_play_hosts)
            | map("extract", hostvars)
            | selectattr("vault_sealed", "defined")
            | selectattr("vault_sealed", "false")
            | map(attribute="inventory_hostname")
        )[0]
      }}

- name: Set facts for chosen unsealed host
  run_once: true
  set_fact:
    unsealed_host_public_url: "{{ hostvars[unsealed_host]['unsealed_host_public_url'] }}"
    unsealed_host_ca_path: "{{ hostvars[unsealed_host]['unsealed_host_ca_path'] | default(omit) }}"
