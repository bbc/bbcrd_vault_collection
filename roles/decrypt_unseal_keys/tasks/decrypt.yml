---

- name: Enumerate available PGP private keys
  run_once: true
  bbcrd.ansible_vault.pgp_list:
    type: private
    gnupg_home: "{{ ansible_vault_gnupg_home }}"
  register: private_keys

- name: Enumerate decryptable unseal keys
  run_once: true
  set_fact:
    decryptable_unseal_keys: |-
      {{
        (
          (
            encrypted_unseal_keys.shares
              | selectattr("fingerprint", "in", ansible_vault_pgp_key_fingerprints)
          ) if ansible_vault_pgp_key_fingerprints is not none else (
            encrypted_unseal_keys.shares
          )
        ) | selectattr("fingerprint", "in", private_keys.fingerprints)
      }}

- name: Check we can use at least one unseal key
  run_once: true
  assert:
    that: "{{ decryptable_unseal_keys | length >= 1 }}"
    fail_msg: "No unseal keys can be decrypted."
    quiet: true

- name: Decrypt the unseal keys
  run_once: true
  no_log: "{{ ansible_vault_no_log_sensitive }}"
  bbcrd.ansible_vault.pgp_decrypt:
    ciphertext: "{{ item.encrypted_unseal_key }}"
    gnupg_home: "{{ ansible_vault_gnupg_home }}"
  loop: "{{ decryptable_unseal_keys }}"
  loop_control:
    label: "{{ item.fingerprint }}"
  register: decrypted

- name: Base64 decode decrypted unseal keys
  run_once: true
  no_log: "{{ ansible_vault_no_log_sensitive }}"
  set_fact:
    ansible_vault_unseal_keys: |-
      {{
        decrypted.results
          | map(attribute="plaintext")
          | map("b64decode")
      }}
    unseal_keys_decrypted: true
