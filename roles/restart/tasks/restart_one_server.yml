---
# Restart (then unseal) a single vault server specified by the variable 'target

# Unless bbcrd_vault_allow_loss_of_quorum_on_restart is set, we'll refuse to
# restart a server which would result in the cluster becoming unavailable due
# to a loss of quorum.
#
# Note that in the case of a vault instance already being down for some reason
# its being restarted will not contribute to the cluster's health. We'll allow
# restarting such instances regardless.
#
# We'll retry this check if it fails to allow time for autopilot to consider
# any recently restarted nodes as stable, thus adding them back into the
# cluster as voters and potentially adding the needed resliancy. This is also
# necessary when the host Ansible chooses to make this request has just been
# restarted and is not yet back in the cluster.
- name: "Check that restarting {{ target }} would not result in downtime"
  run_once: true
  when: not bbcrd_vault_allow_loss_of_quorum_on_restart
  no_log: "{{ bbcrd_vault_no_log_sensitive }}"
  uri:
    # vault operator raft autopilot state
    url: "{{ bbcrd_vault_public_url }}/v1/sys/storage/raft/autopilot/state"
    headers:
      X-Vault-Token: "{{ bbcrd_vault_root_token }}"
    ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
  register: vault_autopilot_state
  # Either the cluster has enough fault tolerance to cope with a restarted node
  # or the node we're about to restart is already down for some reason.
  until: >-
    vault_autopilot_state.status == 200
    and (
      vault_autopilot_state.json.data.failure_tolerance >= 1
      or not (vault_autopilot_state.json.data.servers[target].healthy | default(False))
    )
  retries: 20
  delay: 2  # The default autopilot delay is 10 seconds

- name: "Restart and unseal {{ target }}"
  when: inventory_hostname == target
  block:

    - name: "Restart Vault on {{ target }}"
      systemd:
        name: "{{ bbcrd_vault_systemd_unit }}"
        state: restarted

    # Note: We retry with a generous delay here in case we're accessing Vault
    # via some kind of proxy which might not immediately notice that the server
    # has come up.
    - name: Wait for Vault on "{{ target }}" to come back up
      uri:
        # vault status
        url: "{{ bbcrd_vault_public_url }}/v1/sys/seal-status"
        ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
      retries: 5
      delay: 5
      until: vault_status.status == 200  # i.e. connection successful
      register: vault_status
    
    - name: "Unseal Vault on {{ target }}"
      import_role:
        name: bbcrd.vault.unseal
        tasks_from: unseal.yml
