---
# Ensure a vault root token is present in bbcrd_vault_root_token. If a root
# token is already stored there, do nothing. Otherwise, produce a new root
# token using unseal keys.
#
# Note: By convention we don't count generation of a root token to the
# bbcrd_vault_root_token variable as a change to avoid polluting the ansible
# change count.

- name: Obtain root token
  any_errors_fatal: true
  when: bbcrd_vault_root_token is none
  block:
    - name: Only need to perform root generation on one host
      run_once: true
      block:
        - name: Cancel any previous root token generation
          uri:
            # vault operator generate-root -cancel ...
            url: "{{ bbcrd_vault_public_url }}/v1/sys/generate-root/attempt"
            method: DELETE
            ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
            status_code: [200, 204]  # OK or No Content
        
        - name: Begin root token generation
          no_log: "{{ bbcrd_vault_no_log_sensitive }}"  # Due to OTP being returned
          uri:
            # vault operator generate-root -init ...
            url: "{{ bbcrd_vault_public_url }}/v1/sys/generate-root/attempt"
            method: POST
            ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
          register: vault_generate_root_init
        
        - name: Supply unseal keys
          import_role:
            name: bbcrd.vault.generic_unseal_key_submission_flow
          vars:
            purpose: "to generate a root token"
            nonce: "{{ vault_generate_root_init.json.nonce }}"
            status_api_url: "{{ bbcrd_vault_public_url }}/v1/sys/generate-root/attempt"
            # vault operator generate-root ...
            submit_api_url: "{{ bbcrd_vault_public_url }}/v1/sys/generate-root/update"
        
        # Note: The Vault API documentation erroneously suggests that the OTP
        # returned by the initialisation step is base64 encoded. In previous
        # vault instances, this might have been the case but it certainly isn't
        # any more.
        - name: Decrypt generated root token
          no_log: "{{ bbcrd_vault_no_log_sensitive }}"
          set_fact:
            generated_root_token: |-
              {{
                (
                    vault_generate_root_init.json.otp | b64encode
                    if vault_generate_root_init.json.otp_length != 0 else
                    vault_generate_root_init.json.otp ~ "=="
                )
                  | bbcrd.vault.xor_b64_bytes(submission.json.encoded_token ~ '==')
                  | b64decode
              }}
        
        # Use the generated root token to create a new finite-TTL root token to
        # protect against this playbook failing to exit cleanly.
        - name: Create a root token with finite lifetime for use in playbook
          no_log: "{{ bbcrd_vault_no_log_sensitive }}"
          uri:
            # vault token create ...
            url: "{{ bbcrd_vault_public_url }}/v1/auth/token/create"
            method: POST
            body_format: json
            body:
              display_name: "bbcrd_vault_ephemeral_root"
              # Expire after a fixed and non-extendable TTL
              ttl: "{{ bbcrd_vault_root_token_ttl }}"
              renewable: false
              # Don't delete when our generated token is revoked
              no_parent: true
            headers:
              X-Vault-Token: "{{ generated_root_token }}"
            ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
          register: vault_create_token
      
        - name: Revoke non-expiring root token generated using unseal keys
          no_log: "{{ bbcrd_vault_no_log_sensitive }}"
          uri:
            # vault token revoke
            url: "{{ bbcrd_vault_public_url }}/v1/auth/token/revoke-self"
            method: POST
            headers:
              X-Vault-Token: "{{ generated_root_token }}"
            status_code: [200, 204]  # OK or No Content
            ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
        
        - name: Set bbcrd_vault_root_token fact
          no_log: "{{ bbcrd_vault_no_log_sensitive }}"
          set_fact:
            bbcrd_vault_root_token: "{{ vault_create_token.json.auth.client_token }}"
            root_token_generated: true
