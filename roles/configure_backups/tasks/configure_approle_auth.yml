---

# The tasks in this file are responsible for configuring Vault AppRole-based
# authentication for the backup process.


- run_once: true
  block:
    - name: Create AppRole auth endpoint for backup authentication
      bbcrd.vault.vault_auth_method:
        type: approle
        mount: "{{ bbcrd_vault_backup_approle_mount }}"
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
    
    - name: Create policy allowing access to the snapshot endpoint
      bbcrd.vault.vault_policy:
        name: "{{ bbcrd_vault_backup_policy_name }}"
        policy: |-
          path "sys/storage/raft/snapshot" {
            capabilities = ["read"]
          }
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"

    - name: Setup backup AppRole roles for each server in the cluster
      bbcrd.vault.vault_approles:
        mount: "{{ bbcrd_vault_backup_approle_mount }}"
        approles: |-
          {{
            groups[bbcrd_vault_cluster_ansible_group_name]
            | map('community.general.dict_kv', 'key')
            | map('combine', parameters | community.general.dict_kv('value'))
            | items2dict
          }}
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
      vars:
        parameters:
          token_type: service
          token_policies:
            - "{{ bbcrd_vault_backup_policy_name }}"
          token_num_uses: 1
          token_ttl: "{{ bbcrd_vault_backup_token_ttl }}"
          token_max_ttl: "{{ bbcrd_vault_backup_token_ttl }}"
          token_bound_cidrs: "{{ bbcrd_vault_backup_cidrs }}"
      register: approles

- name: Check whether AppRole credentials file exists and is up-to-date
  slurp:
    src: "{{ bbcrd_vault_backup_auth_file }}"
  failed_when: false
  when: not bbcrd_vault_backup_rotate_auth_credentials
  register: auth_file

- name: Update credentials files (if needed)
  when: |-
    bbcrd_vault_backup_rotate_auth_credentials
    or (
      (approles.role_ids[inventory_hostname] | quote)
      not in
      (auth_file.content | default("") | b64decode)
    )
  block:
    - name: Generate new backup approle secret
      bbcrd.vault.vault_approle_secret:
        mount: "{{ bbcrd_vault_backup_approle_mount }}"
        approle_name: "{{ inventory_hostname }}"
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
      register: backup_approle_secret
    
    - name: Write backup credentials file
      when: backup_approle_secret.changed
      copy:
        content: |-
          ROLE_ID={{ approles.role_ids[inventory_hostname] | quote }}
          SECRET_ID={{ backup_approle_secret.secret_id | quote }}
        dest: "{{ bbcrd_vault_backup_auth_file }}"
        mode: "0600"
        owner: "{{ bbcrd_vault_backup_user }}"
        group: "{{ bbcrd_vault_backup_group }}"
