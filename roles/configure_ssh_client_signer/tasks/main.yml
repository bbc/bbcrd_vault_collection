- run_once: true
  block:
    - name: Enable SSH secrets engine
      bbcrd.vault.vault_secrets_engine:
        mount: "{{ bbcrd_vault_ssh_client_signer_mount }}"
        type: ssh
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"

    - name: Configure SSH client key signer
      bbcrd.vault.vault_ssh_signer:
        mount: "{{ bbcrd_vault_ssh_client_signer_mount }}"
        ca: |-
          {{
            {"generate_signing_key": True}
            if (
              bbcrd_vault_ssh_client_signer_public_key is none
              or bbcrd_vault_ssh_client_signer_private_key is none
            ) else
            {
              "public_key": bbcrd_vault_ssh_client_signer_public_key,
              "private_key": bbcrd_vault_ssh_client_signer_private_key,
            }
          }}
        state: "{{ 'replaced' if bbcrd_vault_ssh_client_signer_replace_key else 'present' }}"
        # NB: Since we don't specify allowed_extensions, the user is not
        # allowed to specify the extensions they want. Instead they'll
        # always get the 'default_extensions'.
        roles: >-
            {%- set roles = {} -%}
            {%- for name, options in bbcrd_vault_ssh_client_signer_roles.items() -%}
            {%-     set options = bbcrd_vault_configure_ssh_client_signer_default_role_options | combine(options) -%}
            {%-
                    set _ = roles.__setitem__(
                        name,
                        {
                            "key_type": "ca",
                            "allow_user_certificates": True,
                            "algorithm_signer": options["algorithm"],
                            "default_user": options["users"] | join(","),
                            "allowed_users": options["users"] | join(","),
                            "default_extensions": (
                                options["extensions"]
                                | bbcrd.vault.vault_ssh_allowed_extensions_dict
                            ),
                            "ttl": options["ttl"],
                            "max_ttl": options["ttl"],
                        }
                    )
            -%}
            {%- endfor -%}
            {{ roles }}
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"

    - name: Create policy to grant access for SSH key signing
      bbcrd.vault.vault_policy:
        name: "{{ item.value.policy }}"
        policy: |-
          path "{{ bbcrd_vault_ssh_client_signer_mount }}/sign/{{ item.key }}" {
            capabilities = ["create", "update"]
          }
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
        vault_ca_path: "{{ bbcrd_vault_ca_path | default(omit) }}"
      loop: "{{ bbcrd_vault_ssh_client_signer_roles | dict2items }}"
      when: "item.value.policy | default(False)"
      loop_control:
        label: "{{ item.key }}"
