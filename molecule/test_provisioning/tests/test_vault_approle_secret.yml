---

- hosts: vault
  tasks:
    - import_tasks: ../load_credentials_and_reset_vault.yml
    
    - name: Enable AppRole auth
      bbcrd.vault.vault_auth_method:
        type: approle
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
    
    - name: Create a new approle
      bbcrd.vault.vault_approles:
        approles:
            my-approle:
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
      register: approle
      failed_when: not approle.changed
    
    - name: Create a secret_id
      bbcrd.vault.vault_approle_secret:
        approle_name: "my-approle"
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
      register: first_secret
    
    - name: Check secret_id can be used to login
      uri:
        url: "{{ bbcrd_vault_public_url }}/v1/auth/approle/login"
        method: POST
        body_format: json
        body:
          role_id: "{{ approle.role_ids['my-approle'] }}"
          secret_id: "{{ first_secret.secret_id }}"
    
    - name: Create a second (custom) secret
      bbcrd.vault.vault_approle_secret:
        approle_name: "my-approle"
        secret_id: hunter2
        state: added
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
      register: second_secret
      failed_when: second_secret.secret_id != "hunter2"
    
    - name: Check custom secret_id can be used to login
      uri:
        url: "{{ bbcrd_vault_public_url }}/v1/auth/approle/login"
        method: POST
        body_format: json
        body:
          role_id: "{{ approle.role_ids['my-approle'] }}"
          secret_id: "{{ second_secret.secret_id }}"
    
    - name: Check first secret_id wasn't invalidated as we used state=added
      uri:
        url: "{{ bbcrd_vault_public_url }}/v1/auth/approle/login"
        method: POST
        body_format: json
        body:
          role_id: "{{ approle.role_ids['my-approle'] }}"
          secret_id: "{{ first_secret.secret_id }}"
    
    - name: Create third secret with state=singular
      bbcrd.vault.vault_approle_secret:
        approle_name: "my-approle"
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
      register: third_secret
    
    - name: Check only third secret exists
      uri:
        url: "{{ bbcrd_vault_public_url }}/v1/auth/approle/role/my-approle/secret-id"
        method: LIST
        headers:
          X-Vault-Token: "{{ bbcrd_vault_root_token }}"
      register: list
      failed_when: list.json.data["keys"] != [third_secret.secret_id_accessor]
    
    - name: Remove all secrets
      bbcrd.vault.vault_approle_secret:
        approle_name: "my-approle"
        state: absent
        vault_url: "{{ bbcrd_vault_public_url }}"
        vault_token: "{{ bbcrd_vault_root_token }}"
    
    - name: Check all secrets removed
      uri:
        url: "{{ bbcrd_vault_public_url }}/v1/auth/approle/role/my-approle/secret-id"
        method: LIST
        headers:
          X-Vault-Token: "{{ bbcrd_vault_root_token }}"
        status_code: 404
